name: Build Windows Export

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Install required tools for unzipping, Python, and JSON processing
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip jq python3
    
      # Set build variables from the JSON config using Python.
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13

    - name: Set Build Variables
      run: python3 .github/export_vars.py
    
    - name: Restore caches
      uses: actions/cache@v4
      with:
        path: .godot/
        key: game-jam-autobuild-caches-godot-${{ github.repository }}
    
    - name: Install Wine for Windows EXE logo
      id: wine_install
      run: |
        sudo apt install wine64
        echo "WINE_PATH=$(which wine64)" >> $GITHUB_OUTPUT

    - name: Export Godot project
      id: export-normal
      uses: firebelley/godot-export@v6.0.0
      with:
        godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_export_templates.tpz
        cache: true
        relative_export_path: "./dist/normal"
        relative_project_path: "./"
        wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}
        archive_output: true

    - name: Export debug version
      id: export-debug
      uses: firebelley/godot-export@v6.0.0
      with:
        export_debug: true
        godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_export_templates.tpz
        cache: true
        relative_export_path: "./dist/debug"
        relative_project_path: "./"
        wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}
        archive_output: true
    
    - name: Upload normal build
      id: normal-build-upload
      uses: actions/upload-artifact@v4
      with:
        name: normal builds
        path: ${{ github.workspace }}/dist/normal/*
    - name: Upload debug build
      id: debug-build-upload
      uses: actions/upload-artifact@v4
      with:
        name: debug builds
        path: ${{ github.workspace }}/dist/debug/*
      
    - name: Warn if an upload or build fails
      id: warn-on-failures
      run: |
        if [ "${{ steps.export-normal.outcome }}" != "success" ]; then
          curl -H "Content-Type: application/json" \
             -d "{\"content\": \"Run ID ${{ github.run_id }} (branch ref: ${{ github.repository }}@${{ github.ref_name }}, commit ${{ github.sha }}) failed to build normally!\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
        fi
        if [ "${{ steps.export-debug.outcome }}" != "success" ]; then
          curl -H "Content-Type: application/json" \
             -d "{\"content\": \"Run ID ${{ github.run_id }} (branch ref: ${{ github.repository }}@${{ github.ref_name }}, commit ${{ github.sha }}) failed to build a debug version!\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
        fi

        if [ "${{ steps.normal-build-upload.outcome }}" != "success" ]; then
          curl -H "Content-Type: application/json" \
             -d "{\"content\": \"Run ID ${{ github.run_id }} (branch ref: ${{ github.repository }}@${{ github.ref_name }}, commit ${{ github.sha }}) didn't upload normal build!\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
        fi
        if [ "${{ steps.debug-build-upload.outcome }}" != "success" ]; then
          curl -H "Content-Type: application/json" \
             -d "{\"content\": \"Run ID ${{ github.run_id }} (branch ref: ${{ github.repository }}@${{ github.ref_name }}, commit ${{ github.sha }}) didn't upload debug build!\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
        fi

    # Post the artifact download URL to a Discord webhook.
    - name: Post artifact link to Discord
      run: |
        curl -H "Content-Type: application/json" \
             -d "{\"content\": \"# New builds available!\n## Run info\n* Commit [${{ github.sha }}](<https://github.com/${{ github.repository }}/tree/${{ github.sha }})\n* Source: [${{ github.repository }}](<https://github.com/${{ github.repository }}>)@[${{ github.ref_name }}](<https://github.com/${{ github.repository }}/tree/${{ github.ref_name }}>) (Repo ID: ${{ github.repository_id }})\n* Triggered by: ${{ github.triggering_actor }}\n* Run ID: [${{ github.run_id }}](<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}>)\n\n## Uploaded artifacts\n### Game Binaries\n* [Normal](${{ steps.normal-build-upload.outputs.artifact-url }}) (SHA-256 hash for validation: ${{ steps.normal-build-upload.outputs.artifact-digest }})\n* [Debug](${{ steps.debug-build-upload.outputs.artifact-url }}) (SHA-256 hash for validation: ${{ steps.debug-build-upload.outputs.artifact-digest }})\n\n-# Artifacts auto-expire after 90 days of being uploaded, as per org policy.\n-# Artifact link missing? Check to make sure all artifacts were built correctly.\n-# Running into issues with CI? [Open an issue](<https://github.com/KTools2202/birdbonk-game-jam-godot/issues/new>).\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
