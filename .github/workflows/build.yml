name: Build Windows Export

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Install required tools for unzipping, Python, and JSON processing
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip jq python3
    
      # Set build variables from the JSON config using Python.
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13

    - name: Set Build Variables
      run: python3 .github/export_vars.py
    
    - name: Restore caches
      uses: actions/cache@v4
      with:
        path: .godot/
        key: game-jam-autobuild-caches-godot-${{ github.repository }}
    
    - name: Install Wine for Windows EXE logo
      id: wine_install
      run: |
        sudo apt install wine64
        echo "WINE_PATH=$(which wine64)" >> $GITHUB_OUTPUT

    - name: Export Godot project
      id: export-normal
      uses: firebelley/godot-export@v6.0.0
      with:
        godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_export_templates.tpz
        cache: true
        relative_project_path: "."
        wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}
        archive_output: true

    - name: Export debug version
      id: export-debug
      uses: firebelley/godot-export@v6.0.0
      with:
        export_debug: true
        godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_export_templates.tpz
        cache: true
        relative_project_path: "."
        wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}
        archive_output: true
    
    - name: Upload archives
      uses: actions/upload-artifact@v4
      with:
        name: normal builds
        path: ${{ steps.export-normal.outputs.build_directory }}/*
    - name: Upload debug archive
      uses: actions/upload-artifact@v4
      with:
        name: debug builds
        path: ${{ steps.export-debug.outputs.build_directory }}/*

    - name: Upload archives
      uses: actions/upload-artifact@v4
      with:
        name: normal build archives
        path: ${{ steps.export-normal.outputs.archive_directory }}/*
    - name: Upload debug archive
      uses: actions/upload-artifact@v4
      with:
        name: debug build archives
        path: ${{ steps.export-debug.outputs.archive_directory }}/*

    # Query the GitHub API for artifact information, extract the artifact download URL, and set it as an output.
    - name: Get artifact download URL
      id: get_artifact
      env:
        REPO: ${{ github.repository }}
        RUN_ID: ${{ github.run_id }}
      run: |
        echo "Fetching artifact download URL..."
        ARTIFACT_JSON=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/artifacts")
        echo "$ARTIFACT_JSON" > artifacts.json
        ARTIFACT_URL=$(jq -r '.artifacts[0].archive_download_url' artifacts.json)
        echo "Artifact URL: $ARTIFACT_URL"
        echo "artifact_url=$ARTIFACT_URL" >> $GITHUB_OUTPUT

    # Post the artifact download URL to a Discord webhook.
    - name: Post artifact link to Discord
      run: |
        curl -H "Content-Type: application/json" \
             -d "{\"content\": \"Commit ${{ github.sha }} now has a build artifact available: ${{ steps.get_artifact.outputs.artifact_url }}\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
